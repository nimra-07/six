🧪 Program 10: Demonstrate Auto Scaling Group in AWS
🔰 Objective:
To create an Auto Scaling Group with a Load Balancer that automatically launches or terminates EC2 instances based on predefined capacity, to avoid constant running of instances.

✅ Phase 1: Network Infrastructure Setup
🔹 Step 1: Create a VPC
Go to VPC Dashboard → Click Create VPC

Name: AutoScaling-VPC

IPv4 CIDR: 10.0.0.0/16

Click Create

🔹 Step 2: Create and Attach an Internet Gateway
Go to Internet Gateways → Click Create

Name: AutoScaling-IGW

Click Create → Then Attach to VPC → Select AutoScaling-VPC

🔹 Step 3: Create Two Public Subnets
Go to Subnets → Create Subnet

VPC: AutoScaling-VPC

Subnet 1:
Name: Public-Subnet-1

AZ: ap-south-1a

CIDR: 10.0.1.0/24

Subnet 2:
Name: Public-Subnet-2

AZ: ap-south-1b

CIDR: 10.0.2.0/24

🔹 Step 4: Create Route Table and Associate
Go to Route Tables → Create Route Table

Name: Public-RT

VPC: AutoScaling-VPC

Add Route:
Destination: 0.0.0.0/0

Target: AutoScaling-IGW

Associate Subnets:
Edit Subnet Associations → Select both public subnets

✅ Phase 2: Create Security Groups
🔹 EC2 Security Group (EC2-SG)
Inbound Rules:

HTTP (80) → Source: 0.0.0.0/0

SSH (22) → Source: Your IP

🔹 Load Balancer Security Group (ALB-SG)
Inbound Rules:

HTTP (80) → Source: 0.0.0.0/0

✅ Phase 3: Create Target Group and Load Balancer
🔹 Step 5: Create Target Group
EC2 → Load Balancing → Target Groups → Create Target Group

Target type: Instances

Name: AutoScaling-TG

Protocol: HTTP, Port: 80

VPC: AutoScaling-VPC

Health Check Path: /

Click Create

🔹 Step 6: Create Application Load Balancer (ALB)
EC2 → Load Balancers → Create Load Balancer

Type: Application Load Balancer

Name: AutoScaling-ALB

Scheme: Internet-facing

VPC: AutoScaling-VPC

Subnets: Select both public subnets

Security Group:
Select or create ALB-SG

Listener:
Port 80 → Forward to: AutoScaling-TG

Click Create Load Balancer

✅ Phase 4: Launch Template & Auto Scaling
🔹 Step 7: Create Launch Template
EC2 → Launch Templates → Create launch template

Name: AutoScaling-LT

AMI: Amazon Linux 2 (or Ubuntu)

Instance Type: t2.micro

Key Pair: Choose your key

Network Settings:
Subnet: ❌ Don’t include (handled by ASG)

Auto-assign Public IP: ✅ Enable

Security Group:
Select EC2-SG

User Data:
Paste the script (choose based on AMI):

For Ubuntu:

bash
Copy
Edit
#!/bin/bash
sudo apt update -y
sudo apt install apache2 -y
echo "<h1>Launched by Auto Scaling - $(hostname)</h1>" > /var/www/html/index.html
sudo systemctl start apache2
For Amazon Linux 2:

bash
Copy
Edit
#!/bin/bash
yum update -y
yum install -y httpd
echo "<h1>Launched by Auto Scaling - $(hostname)</h1>" > /var/www/html/index.html
systemctl start httpd
Click Create launch template

🔹 Step 8: Create Auto Scaling Group
EC2 → Auto Scaling Groups → Create Auto Scaling Group

Name: AutoScaling-ASG

Launch Template: Select AutoScaling-LT

VPC: AutoScaling-VPC

Subnets: Select both public subnets

Load Balancer:
Attach to existing ALB

Choose AutoScaling-TG

✅ Enable ELB health checks

Group Size:
Desired: 2

Min: 1

Max: 3

Click Create Auto Scaling Group

✅ Phase 5: Testing Auto Scaling Setup
🔹 Step 9: Verify Load Balancer
Go to EC2 → Load Balancer → Click your ALB

Copy DNS name and paste in browser

You should see:
Launched by Auto Scaling - ip-10-0-1-xxx

🔹 Step 10: Verify Auto Scaling
Go to EC2 → Instances

Manually terminate one instance launched by ASG

Within 1–2 minutes, ASG will launch a new EC2

Target Group → Targets → Should show new instance as Healthy

